# Generated by Django 5.2.1 on 2025-08-14 18:42

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import guardian.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Optional phone number in international format (e.g., +1234567890).",
                        max_length=15,
                        null=True,
                        verbose_name="phone number",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Short user biography or description.",
                        max_length=500,
                        verbose_name="biography",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        help_text="Optional date of birth.",
                        null=True,
                        verbose_name="date of birth",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the user's email has been verified.",
                        verbose_name="email verified",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        help_text="Optional profile picture.",
                        null=True,
                        upload_to="profile_pictures/",
                        verbose_name="profile picture",
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of the user's last activity.",
                        null=True,
                        verbose_name="last activity",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into the admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "headline",
                    models.CharField(
                        blank=True,
                        help_text="Professional headline or title",
                        max_length=220,
                        verbose_name="professional headline",
                    ),
                ),
                (
                    "current_position",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="current position"
                    ),
                ),
                (
                    "current_company",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="current company"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="location"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        blank=True,
                        default="UTC",
                        max_length=50,
                        verbose_name="timezone",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("away", "Away"),
                            ("busy", "Busy"),
                            ("do-not-disturb", "Do Not Disturb"),
                            ("suspended", "Suspended"),
                            ("pending", "Pending"),
                            ("deleted", "Deleted"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_online", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ["username"],
            },
            bases=(guardian.mixins.GuardianUserMixin, models.Model),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("issuer", models.CharField(blank=True, max_length=200)),
                ("date", models.DateField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("award", "Award"),
                            ("recognition", "Recognition"),
                            ("publication", "Publication"),
                            ("patent", "Patent"),
                            ("certification", "Certification"),
                            ("other", "Other"),
                        ],
                        default="award",
                        max_length=20,
                    ),
                ),
                ("url", models.URLField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="achievements/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "achievement",
                "verbose_name_plural": "achievements",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("profile_update", "Profile Update"),
                            ("connection_request", "Connection Request"),
                            ("connection_accept", "Connection Accept"),
                            ("endorsement", "Endorsement"),
                            ("project_update", "Project Update"),
                            ("skill_update", "Skill Update"),
                            ("login", "Login"),
                            ("password_change", "Password Change"),
                            ("profile_view", "Profile View"),
                            ("resume_created", "Resume Created"),
                            ("resume_updated", "Resume Updated"),
                            ("resume_deleted", "Resume Deleted"),
                            ("resume_published", "Resume Published"),
                            ("resume_downloaded", "Resume Downloaded"),
                            ("resume_generated", "Resume Generated"),
                            ("recommendation_given", "Recommendation Given"),
                            ("recommendation_received", "Recommendation Received"),
                            ("recommendation_updated", "Recommendation Updated"),
                            ("recommendation_deleted", "Recommendation Deleted"),
                            ("recommendation_approved", "Recommendation Approved"),
                            ("recommendation_declined", "Recommendation Declined"),
                            ("recommendation_requested", "Recommendation Requested"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.CharField(max_length=200)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "activity log",
                "verbose_name_plural": "activity logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Certification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("issuer", models.CharField(max_length=200)),
                ("issue_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("credential_id", models.CharField(blank=True, max_length=100)),
                ("credential_url", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
                ("skills", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "certification",
                "verbose_name_plural": "certifications",
                "ordering": ["-issue_date"],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "head",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="departments_headed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_departments",
                        to="accounts.department",
                    ),
                ),
            ],
            options={
                "verbose_name": "department",
                "verbose_name_plural": "departments",
            },
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("institution", models.CharField(max_length=200)),
                ("degree", models.CharField(max_length=100)),
                ("field_of_study", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("gpa", models.CharField(blank=True, max_length=10)),
                ("description", models.TextField(blank=True)),
                ("achievements", models.JSONField(blank=True, default=list)),
                ("activities", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="educations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "education",
                "verbose_name_plural": "educations",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("company", models.CharField(max_length=100)),
                ("company_url", models.URLField(blank=True)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                ("skills", models.JSONField(blank=True, default=list)),
                ("achievements", models.JSONField(blank=True, default=list)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("work", "Work"),
                            ("internship", "Internship"),
                            ("volunteer", "Volunteer"),
                            ("freelance", "Freelance"),
                        ],
                        default="work",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "experience",
                "verbose_name_plural": "experiences",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                        ],
                        default="sent",
                        max_length=10,
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True, null=True, upload_to="message_attachments/"
                    ),
                ),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="accounts.message",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "message",
                "verbose_name_plural": "messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Network",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("industry", models.CharField(blank=True, max_length=100)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="network_logos/"
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("member_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admins",
                    models.ManyToManyField(
                        blank=True,
                        related_name="networks_administered",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="networks_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "network",
                "verbose_name_plural": "networks",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("connection_request", "Connection Request"),
                            ("connection_accepted", "Connection Accepted"),
                            ("skill_endorsement", "Skill Endorsement"),
                            ("profile_view", "Profile View"),
                            ("message", "New Message"),
                            ("recommendation", "Recommendation"),
                            ("recommendation_received", "Recommendation Received"),
                            ("recommendation_approved", "Recommendation Approved"),
                            ("recommendation_declined", "Recommendation Declined"),
                            ("recommendation_request", "Recommendation Request"),
                            ("task_assigned", "Task Assigned"),
                            ("task_completed", "Task Completed"),
                            ("project_invitation", "Project Invitation"),
                            ("network_invitation", "Network Invitation"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("data", models.JSONField(blank=True, default=dict)),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_notifications_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "notification",
                "verbose_name_plural": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProfileStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_views", models.PositiveIntegerField(default=0)),
                ("profile_views_this_week", models.PositiveIntegerField(default=0)),
                ("profile_views_this_month", models.PositiveIntegerField(default=0)),
                ("connections_count", models.PositiveIntegerField(default=0)),
                ("endorsements_count", models.PositiveIntegerField(default=0)),
                ("project_views", models.PositiveIntegerField(default=0)),
                ("search_appearances", models.PositiveIntegerField(default=0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "profile stats",
                "verbose_name_plural": "profile stats",
            },
        ),
        migrations.CreateModel(
            name="ProfileView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "profile_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_views_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "viewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_views_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "profile view",
                "verbose_name_plural": "profile views",
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="project_thumbnails/"
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("url", models.URLField(blank=True)),
                ("github_url", models.URLField(blank=True)),
                ("technologies", models.JSONField(default=list)),
                ("role", models.CharField(blank=True, max_length=100)),
                ("team_size", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("personal", "Personal"),
                            ("professional", "Professional"),
                            ("academic", "Academic"),
                            ("open-source", "Open Source"),
                        ],
                        default="personal",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Completed"),
                            ("in-progress", "In Progress"),
                            ("on-hold", "On Hold"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="completed",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "project",
                "verbose_name_plural": "projects",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="ProjectImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="project_images/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="accounts.project",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True)),
                ("publisher", models.CharField(max_length=200)),
                ("publication_date", models.DateField()),
                ("url", models.URLField(blank=True)),
                ("authors", models.JSONField(default=list)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("article", "Article"),
                            ("book", "Book"),
                            ("research", "Research"),
                            ("blog", "Blog"),
                            ("whitepaper", "Whitepaper"),
                            ("other", "Other"),
                        ],
                        default="article",
                        max_length=20,
                    ),
                ),
                ("tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "publication",
                "verbose_name_plural": "publications",
                "ordering": ["-publication_date"],
            },
        ),
        migrations.CreateModel(
            name="Resume",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("template", models.CharField(default="default", max_length=50)),
                ("content", models.JSONField(default=dict)),
                ("file", models.FileField(blank=True, null=True, upload_to="resumes/")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("last_downloaded", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resumes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "resume",
                "verbose_name_plural": "resumes",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_system_role", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True, related_name="custom_roles", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "role",
                "verbose_name_plural": "roles",
            },
        ),
        migrations.CreateModel(
            name="SavedSearch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("query_params", models.JSONField()),
                ("alert_enabled", models.BooleanField(default=False)),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_searches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "saved search",
                "verbose_name_plural": "saved searches",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("category", models.CharField(max_length=50)),
                (
                    "level",
                    models.IntegerField(
                        help_text="Skill level from 1 (Beginner) to 5 (Expert)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("last_used", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "skill",
                "verbose_name_plural": "skills",
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("todo", "To Do"),
                            ("in_progress", "In Progress"),
                            ("review", "Under Review"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="todo",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("estimated_hours", models.PositiveIntegerField(blank=True, null=True)),
                ("actual_hours", models.PositiveIntegerField(blank=True, null=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assignee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="accounts.project",
                    ),
                ),
                (
                    "watchers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="watched_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "task",
                "verbose_name_plural": "tasks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="accounts.task",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "task comment",
                "verbose_name_plural": "task comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="user_files/")),
                ("name", models.CharField(max_length=200)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("resume", "Resume"),
                            ("portfolio", "Portfolio"),
                            ("certificate", "Certificate"),
                            ("document", "Document"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_public", models.BooleanField(default=False)),
                ("size", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "user file",
                "verbose_name_plural": "user files",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="display name"
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="cover_images/",
                        verbose_name="cover image",
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="website")),
                (
                    "interests",
                    models.JSONField(
                        blank=True, default=list, verbose_name="interests"
                    ),
                ),
                (
                    "profile_visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("connections-only", "Connections Only"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("show_contact_info", models.BooleanField(default=True)),
                ("show_experience", models.BooleanField(default=True)),
                ("show_education", models.BooleanField(default=True)),
                ("show_skills", models.BooleanField(default=True)),
                ("show_projects", models.BooleanField(default=True)),
                ("show_achievements", models.BooleanField(default=True)),
                ("show_publications", models.BooleanField(default=True)),
                ("show_volunteer", models.BooleanField(default=True)),
                ("allow_endorsements", models.BooleanField(default=True)),
                ("allow_messages", models.BooleanField(default=True)),
                ("allow_connections", models.BooleanField(default=True)),
                ("show_last_seen", models.BooleanField(default=True)),
                ("searchable", models.BooleanField(default=True)),
                (
                    "email_notifications",
                    models.JSONField(
                        default=dict, help_text="Email notification preferences"
                    ),
                ),
                (
                    "push_notifications",
                    models.JSONField(
                        default=dict, help_text="Push notification preferences"
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("system", "System"),
                        ],
                        default="system",
                        max_length=10,
                    ),
                ),
                ("language", models.CharField(default="en", max_length=10)),
                (
                    "date_format",
                    models.CharField(
                        choices=[
                            ("MM/DD/YYYY", "MM/DD/YYYY"),
                            ("DD/MM/YYYY", "DD/MM/YYYY"),
                            ("YYYY-MM-DD", "YYYY-MM-DD"),
                        ],
                        default="YYYY-MM-DD",
                        max_length=15,
                    ),
                ),
                (
                    "time_format",
                    models.CharField(
                        choices=[("12h", "12h"), ("24h", "24h")],
                        default="24h",
                        max_length=3,
                    ),
                ),
                ("two_factor_enabled", models.BooleanField(default=False)),
                ("login_alerts", models.BooleanField(default=True)),
                ("data_processing", models.BooleanField(default=True)),
                ("analytics_tracking", models.BooleanField(default=True)),
                ("personalized_ads", models.BooleanField(default=False)),
                ("third_party_sharing", models.BooleanField(default=False)),
                ("location_tracking", models.BooleanField(default=False)),
                ("activity_tracking", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "user profile",
                "verbose_name_plural": "user profiles",
            },
        ),
        migrations.CreateModel(
            name="Volunteer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("organization", models.CharField(max_length=200)),
                ("role", models.CharField(max_length=100)),
                ("cause", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                ("skills", models.JSONField(blank=True, default=list)),
                (
                    "hours_contributed",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="volunteer_work",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "volunteer work",
                "verbose_name_plural": "volunteer work",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                            ("blocked", "Blocked"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("message", models.TextField(blank=True, max_length=300)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "connection",
                "verbose_name_plural": "connections",
                "unique_together": {("from_user", "to_user")},
            },
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "follow",
                "verbose_name_plural": "follows",
                "unique_together": {("follower", "following")},
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("code", models.CharField(max_length=10)),
                (
                    "proficiency",
                    models.CharField(
                        choices=[
                            ("native", "Native"),
                            ("fluent", "Fluent"),
                            ("conversational", "Conversational"),
                            ("basic", "Basic"),
                        ],
                        max_length=15,
                    ),
                ),
                ("certifications", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="languages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "language",
                "verbose_name_plural": "languages",
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="NetworkMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("banned", "Banned"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("role", models.CharField(default="member", max_length=50)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "network",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="accounts.network",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="network_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "network membership",
                "verbose_name_plural": "network memberships",
                "unique_together": {("user", "network")},
            },
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("colleague", "Colleague"),
                            ("manager", "Manager"),
                            ("direct_report", "Direct Report"),
                            ("client", "Client"),
                            ("mentor", "Mentor"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("skills_highlighted", models.JSONField(blank=True, default=list)),
                ("is_public", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recommendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recommender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "recommendation",
                "verbose_name_plural": "recommendations",
                "unique_together": {("recommender", "recommendee")},
            },
        ),
        migrations.CreateModel(
            name="SkillEndorsement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message", models.TextField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "endorser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skill_endorsements_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="endorsements",
                        to="accounts.skill",
                    ),
                ),
            ],
            options={
                "verbose_name": "skill endorsement",
                "verbose_name_plural": "skill endorsements",
                "unique_together": {("skill", "endorser")},
            },
        ),
        migrations.CreateModel(
            name="SocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("linkedin", "LinkedIn"),
                            ("github", "GitHub"),
                            ("twitter", "Twitter"),
                            ("instagram", "Instagram"),
                            ("facebook", "Facebook"),
                            ("youtube", "YouTube"),
                            ("website", "Website"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url", models.URLField()),
                ("title", models.CharField(blank=True, max_length=100)),
                ("is_visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "social link",
                "verbose_name_plural": "social links",
                "unique_together": {("user", "platform", "url")},
            },
        ),
        migrations.CreateModel(
            name="UserDepartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=100)),
                ("is_primary", models.BooleanField(default=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="accounts.department",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "user department",
                "verbose_name_plural": "user departments",
                "unique_together": {("user", "department")},
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="role_assignments_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_assignments",
                        to="accounts.role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "user role",
                "verbose_name_plural": "user roles",
                "unique_together": {("user", "role")},
            },
        ),
    ]
