# Generated by Django 5.2.1 on 2025-08-14 20:51

import uuid

import django.core.validators
import django.db.models.deletion
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0002_userprofile_bio_userprofile_current_position_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ChatTheme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("title", models.CharField(max_length=100)),
                ("accent_color", models.CharField(max_length=7)),
                ("background_color", models.CharField(blank=True, max_length=7)),
                ("text_color", models.CharField(blank=True, max_length=7)),
                (
                    "background_image",
                    models.ImageField(blank=True, null=True, upload_to="chat_themes/"),
                ),
                (
                    "pattern_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="chat_patterns/"
                    ),
                ),
                ("is_dark", models.BooleanField(default=False)),
                ("is_premium", models.BooleanField(default=False)),
                ("is_default", models.BooleanField(default=False)),
                ("settings", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Chat Theme",
                "verbose_name_plural": "Chat Themes",
            },
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("private", "Private Chat"),
                            ("group", "Group Chat"),
                            ("supergroup", "Supergroup"),
                            ("channel", "Channel"),
                            ("secret", "Secret Chat"),
                            ("bot", "Bot Chat"),
                            ("forum", "Forum"),
                        ],
                        default="private",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, db_index=True, max_length=255)),
                ("description", models.TextField(blank=True, max_length=255)),
                ("about", models.TextField(blank=True, max_length=70)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="chat_photos/"),
                ),
                (
                    "photo_small",
                    models.ImageField(
                        blank=True, null=True, upload_to="chat_photos/small/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("archived", "Archived"),
                            ("muted", "Muted"),
                            ("deleted", "Deleted"),
                            ("restricted", "Restricted"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_scam", models.BooleanField(default=False)),
                ("is_fake", models.BooleanField(default=False)),
                ("max_members", models.PositiveIntegerField(default=200)),
                (
                    "slow_mode_delay",
                    models.PositiveIntegerField(
                        choices=[
                            (0, "Disabled"),
                            (10, "10 seconds"),
                            (30, "30 seconds"),
                            (60, "1 minute"),
                            (300, "5 minutes"),
                            (900, "15 minutes"),
                            (3600, "1 hour"),
                        ],
                        default=0,
                    ),
                ),
                ("has_protected_content", models.BooleanField(default=False)),
                (
                    "has_aggressive_anti_spam_enabled",
                    models.BooleanField(default=False),
                ),
                (
                    "auto_delete_timer",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "invite_link",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, db_index=True, max_length=32, null=True, unique=True
                    ),
                ),
                ("is_encrypted", models.BooleanField(default=False)),
                (
                    "encryption_key_fingerprint",
                    models.CharField(blank=True, max_length=64),
                ),
                ("ai_enabled", models.BooleanField(default=False)),
                ("bot_commands", models.JSONField(blank=True, default=list)),
                ("has_calls_enabled", models.BooleanField(default=True)),
                ("has_video_calls_enabled", models.BooleanField(default=True)),
                ("has_group_calls_enabled", models.BooleanField(default=True)),
                ("messages_count", models.PositiveIntegerField(default=0)),
                ("participants_count", models.PositiveIntegerField(default=0)),
                ("online_count", models.PositiveIntegerField(default=0)),
                ("theme", models.JSONField(blank=True, default=dict)),
                (
                    "wallpaper",
                    models.ImageField(
                        blank=True, null=True, upload_to="chat_wallpapers/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="chats_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "linked_network",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="network_chats",
                        to="accounts.network",
                    ),
                ),
                (
                    "linked_project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_chats",
                        to="accounts.project",
                    ),
                ),
                (
                    "linked_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="task_chats",
                        to="accounts.task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat",
                "verbose_name_plural": "Chats",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatBot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True, max_length=512)),
                ("about", models.TextField(blank=True, max_length=120)),
                (
                    "bot_pic",
                    models.ImageField(blank=True, null=True, upload_to="bot_pics/"),
                ),
                ("token", models.CharField(max_length=100, unique=True)),
                ("token_hash", models.CharField(max_length=64)),
                ("commands", models.JSONField(blank=True, default=list)),
                ("inline_placeholder", models.CharField(blank=True, max_length=64)),
                ("is_inline", models.BooleanField(default=False)),
                ("can_join_groups", models.BooleanField(default=True)),
                ("can_read_all_group_messages", models.BooleanField(default=False)),
                ("supports_inline_queries", models.BooleanField(default=False)),
                ("webhook_url", models.URLField(blank=True)),
                ("webhook_secret", models.CharField(blank=True, max_length=100)),
                ("messages_sent", models.PositiveIntegerField(default=0)),
                ("users_count", models.PositiveIntegerField(default=0)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_premium", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bot_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Bot",
                "verbose_name_plural": "Chat Bots",
            },
        ),
        migrations.CreateModel(
            name="ChatCall",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("voice", "Voice Call"),
                            ("video", "Video Call"),
                            ("group_voice", "Group Voice Call"),
                            ("group_video", "Group Video Call"),
                            ("live_stream", "Live Stream"),
                        ],
                        default="voice",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ringing", "Ringing"),
                            ("ongoing", "Ongoing"),
                            ("ended", "Ended"),
                            ("missed", "Missed"),
                            ("declined", "Declined"),
                            ("failed", "Failed"),
                        ],
                        default="ringing",
                        max_length=20,
                    ),
                ),
                ("max_participants", models.PositiveIntegerField(default=30)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("answer_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                (
                    "quality_rating",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("connection_data", models.JSONField(blank=True, default=dict)),
                ("is_recorded", models.BooleanField(default=False)),
                (
                    "recording_file",
                    models.FileField(
                        blank=True, null=True, upload_to="call_recordings/"
                    ),
                ),
                ("is_video_disabled", models.BooleanField(default=False)),
                ("is_screen_sharing", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calls",
                        to="chats.chat",
                    ),
                ),
                (
                    "initiator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="initiated_calls",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Call",
                "verbose_name_plural": "Chat Calls",
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="ChatCallParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("invited", "Invited"),
                            ("ringing", "Ringing"),
                            ("joined", "Joined"),
                            ("left", "Left"),
                            ("declined", "Declined"),
                            ("missed", "Missed"),
                        ],
                        default="invited",
                        max_length=20,
                    ),
                ),
                ("invited_at", models.DateTimeField(auto_now_add=True)),
                ("joined_at", models.DateTimeField(blank=True, null=True)),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                ("is_muted", models.BooleanField(default=False)),
                ("is_video_enabled", models.BooleanField(default=True)),
                ("is_screen_sharing", models.BooleanField(default=False)),
                (
                    "connection_quality",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "call",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chats.chatcall"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Call Participant",
                "verbose_name_plural": "Call Participants",
                "unique_together": {("call", "user")},
            },
        ),
        migrations.AddField(
            model_name="chatcall",
            name="participants",
            field=models.ManyToManyField(
                related_name="calls",
                through="chats.ChatCallParticipant",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ChatFolder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("emoji", models.CharField(blank=True, max_length=10)),
                ("include_private", models.BooleanField(default=True)),
                ("include_groups", models.BooleanField(default=True)),
                ("include_channels", models.BooleanField(default=True)),
                ("include_bots", models.BooleanField(default=True)),
                ("include_muted", models.BooleanField(default=True)),
                ("include_read", models.BooleanField(default=True)),
                ("include_archived", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("chats", models.ManyToManyField(blank=True, to="chats.chat")),
                (
                    "contacts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="folder_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "exclude_contacts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="folder_exclude_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_folders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Folder",
                "verbose_name_plural": "Chat Folders",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ChatInviteLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(blank=True, max_length=32)),
                ("expire_date", models.DateTimeField(blank=True, null=True)),
                ("member_limit", models.PositiveIntegerField(blank=True, null=True)),
                ("creates_join_request", models.BooleanField(default=False)),
                ("is_primary", models.BooleanField(default=False)),
                ("is_revoked", models.BooleanField(default=False)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("pending_join_request_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("revoked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invite_links",
                        to="chats.chat",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_invite_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Invite Link",
                "verbose_name_plural": "Invite Links",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatJoinRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("declined", "Declined"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("bio", models.TextField(blank=True, max_length=70)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("decided_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_join_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="join_requests",
                        to="chats.chat",
                    ),
                ),
                (
                    "invite_link",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="join_requests",
                        to="chats.chatinvitelink",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_join_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Join Request",
                "verbose_name_plural": "Join Requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("forward_from_message_id", models.UUIDField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("photo", "Photo"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("voice", "Voice Note"),
                            ("video_note", "Video Note"),
                            ("document", "Document"),
                            ("sticker", "Sticker"),
                            ("animation", "GIF/Animation"),
                            ("poll", "Poll"),
                            ("quiz", "Quiz"),
                            ("location", "Location"),
                            ("venue", "Venue"),
                            ("contact", "Contact"),
                            ("game", "Game"),
                            ("invoice", "Invoice"),
                            ("payment", "Payment"),
                            ("dice", "Dice"),
                            ("system", "System Message"),
                            ("service", "Service Message"),
                            ("call", "Call"),
                            ("story", "Story"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField(blank=True)),
                (
                    "content_encrypted",
                    encrypted_model_fields.fields.EncryptedTextField(blank=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("received", "Received"),
                            ("read", "Read"),
                            ("edited", "Edited"),
                            ("deleted", "Deleted"),
                            ("failed", "Failed"),
                        ],
                        default="sending",
                        max_length=20,
                    ),
                ),
                ("message_thread_id", models.UUIDField(blank=True, null=True)),
                ("has_media", models.BooleanField(db_index=True, default=False)),
                (
                    "media_group_id",
                    models.CharField(blank=True, db_index=True, max_length=64),
                ),
                ("is_from_offline", models.BooleanField(default=False)),
                ("is_scheduled", models.BooleanField(default=False)),
                ("is_silent", models.BooleanField(default=False)),
                ("is_pinned", models.BooleanField(default=False)),
                ("is_forwarded", models.BooleanField(default=False)),
                ("edit_date", models.DateTimeField(blank=True, null=True)),
                ("edit_hide", models.BooleanField(default=False)),
                ("original_content", models.TextField(blank=True)),
                ("edit_count", models.PositiveIntegerField(default=0)),
                ("reactions", models.JSONField(blank=True, default=dict)),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("forwards_count", models.PositiveIntegerField(default=0)),
                ("replies_count", models.PositiveIntegerField(default=0)),
                ("auto_delete_date", models.DateTimeField(blank=True, null=True)),
                ("ttl_seconds", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "scheduled_date",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("poll_data", models.JSONField(blank=True, default=dict)),
                ("game_data", models.JSONField(blank=True, default=dict)),
                ("payment_data", models.JSONField(blank=True, default=dict)),
                ("location_data", models.JSONField(blank=True, default=dict)),
                ("contact_data", models.JSONField(blank=True, default=dict)),
                ("venue_data", models.JSONField(blank=True, default=dict)),
                ("call_data", models.JSONField(blank=True, default=dict)),
                ("action", models.CharField(blank=True, max_length=50)),
                ("inline_keyboard", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "action_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="system_message_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="chats.chat",
                    ),
                ),
                (
                    "forward_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="forwards",
                        to="chats.chatmessage",
                    ),
                ),
                (
                    "forward_from_chat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="forwarded_messages",
                        to="chats.chat",
                    ),
                ),
                (
                    "read_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="read_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="chats.chatmessage",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "via_bot",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bot_messages",
                        to="chats.chatbot",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Message",
                "verbose_name_plural": "Chat Messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("file", models.FileField(upload_to="chat_attachments/")),
                ("file_name", models.CharField(blank=True, max_length=255)),
                ("file_size", models.PositiveBigIntegerField()),
                ("mime_type", models.CharField(blank=True, max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("photo", "Photo"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("voice", "Voice Note"),
                            ("video_note", "Video Note"),
                            ("document", "Document"),
                            ("sticker", "Sticker"),
                            ("animation", "GIF/Animation"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="chat_thumbnails/"
                    ),
                ),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                ("duration", models.PositiveIntegerField(blank=True, null=True)),
                ("caption", models.TextField(blank=True, max_length=1024)),
                ("title", models.CharField(blank=True, max_length=255)),
                ("performer", models.CharField(blank=True, max_length=255)),
                ("is_encrypted", models.BooleanField(default=False)),
                ("is_processing", models.BooleanField(default=False)),
                ("processing_error", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="chats.chatmessage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Attachment",
                "verbose_name_plural": "Chat Attachments",
            },
        ),
        migrations.AddField(
            model_name="chat",
            name="last_message",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="chats.chatmessage",
            ),
        ),
        migrations.AddField(
            model_name="chat",
            name="pinned_message",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="pinned_in_chats",
                to="chats.chatmessage",
            ),
        ),
        migrations.CreateModel(
            name="ChatModerationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("ban_user", "Ban User"),
                            ("unban_user", "Unban User"),
                            ("restrict_user", "Restrict User"),
                            ("unrestrict_user", "Unrestrict User"),
                            ("promote_user", "Promote User"),
                            ("demote_user", "Demote User"),
                            ("delete_message", "Delete Message"),
                            ("pin_message", "Pin Message"),
                            ("unpin_message", "Unpin Message"),
                            ("change_title", "Change Title"),
                            ("change_description", "Change Description"),
                            ("change_photo", "Change Photo"),
                            ("change_permissions", "Change Permissions"),
                            ("invite_users", "Invite Users"),
                            ("create_invite_link", "Create Invite Link"),
                            ("revoke_invite_link", "Revoke Invite Link"),
                        ],
                        max_length=30,
                    ),
                ),
                ("reason", models.TextField(blank=True, max_length=200)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("old_value", models.TextField(blank=True)),
                ("new_value", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="moderation_logs",
                        to="chats.chat",
                    ),
                ),
                (
                    "moderator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="moderation_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="moderation_actions",
                        to="chats.chatmessage",
                    ),
                ),
                (
                    "target_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="moderation_targets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Moderation Log",
                "verbose_name_plural": "Moderation Logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("admin", "Administrator"),
                            ("moderator", "Moderator"),
                            ("member", "Member"),
                            ("restricted", "Restricted"),
                            ("guest", "Guest"),
                            ("bot", "Bot"),
                        ],
                        default="member",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("left", "Left"),
                            ("kicked", "Kicked"),
                            ("banned", "Banned"),
                            ("restricted", "Restricted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("custom_title", models.CharField(blank=True, max_length=16)),
                ("can_send_messages", models.BooleanField(default=True)),
                ("can_send_media", models.BooleanField(default=True)),
                ("can_send_stickers", models.BooleanField(default=True)),
                ("can_send_polls", models.BooleanField(default=True)),
                ("can_send_other", models.BooleanField(default=True)),
                ("can_add_web_page_previews", models.BooleanField(default=True)),
                ("can_change_info", models.BooleanField(default=False)),
                ("can_invite_users", models.BooleanField(default=False)),
                ("can_pin_messages", models.BooleanField(default=False)),
                ("can_delete_messages", models.BooleanField(default=False)),
                ("can_ban_users", models.BooleanField(default=False)),
                ("can_restrict_members", models.BooleanField(default=False)),
                ("can_promote_members", models.BooleanField(default=False)),
                ("can_manage_calls", models.BooleanField(default=False)),
                ("can_manage_topics", models.BooleanField(default=False)),
                ("can_post_messages", models.BooleanField(default=False)),
                ("can_edit_messages", models.BooleanField(default=False)),
                ("is_anonymous", models.BooleanField(default=False)),
                (
                    "notification_level",
                    models.CharField(
                        choices=[
                            ("all", "All Messages"),
                            ("mentions", "Mentions Only"),
                            ("disabled", "Disabled"),
                        ],
                        default="all",
                        max_length=20,
                    ),
                ),
                ("muted_until", models.DateTimeField(blank=True, null=True)),
                ("folder", models.CharField(blank=True, max_length=50)),
                ("last_read_message_id", models.UUIDField(blank=True, null=True)),
                (
                    "last_read_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("unread_count", models.PositiveIntegerField(default=0)),
                ("unread_mentions_count", models.PositiveIntegerField(default=0)),
                ("joined_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("last_activity_at", models.DateTimeField(blank=True, null=True)),
                ("typing_until", models.DateTimeField(blank=True, null=True)),
                ("banned_until", models.DateTimeField(blank=True, null=True)),
                ("restricted_until", models.DateTimeField(blank=True, null=True)),
                ("ban_reason", models.TextField(blank=True)),
                ("devices", models.JSONField(blank=True, default=list)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chats.chat"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Participant",
                "verbose_name_plural": "Chat Participants",
            },
        ),
        migrations.AddField(
            model_name="chat",
            name="participants",
            field=models.ManyToManyField(
                related_name="chats",
                through="chats.ChatParticipant",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ChatPoll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=300)),
                (
                    "type",
                    models.CharField(
                        choices=[("regular", "Regular Poll"), ("quiz", "Quiz")],
                        default="regular",
                        max_length=20,
                    ),
                ),
                ("is_anonymous", models.BooleanField(default=True)),
                ("allows_multiple_answers", models.BooleanField(default=False)),
                ("is_closed", models.BooleanField(default=False)),
                (
                    "correct_option_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("explanation", models.TextField(blank=True, max_length=200)),
                ("open_period", models.PositiveIntegerField(blank=True, null=True)),
                ("close_date", models.DateTimeField(blank=True, null=True)),
                ("total_voter_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="poll",
                        to="chats.chatmessage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Poll",
                "verbose_name_plural": "Chat Polls",
            },
        ),
        migrations.CreateModel(
            name="ChatPollAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option_ids", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "poll",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="chats.chatpoll",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Poll Answer",
                "verbose_name_plural": "Poll Answers",
            },
        ),
        migrations.CreateModel(
            name="ChatPollOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=100)),
                ("voter_count", models.PositiveIntegerField(default=0)),
                ("order", models.PositiveIntegerField()),
                (
                    "poll",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="chats.chatpoll",
                    ),
                ),
            ],
            options={
                "verbose_name": "Poll Option",
                "verbose_name_plural": "Poll Options",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ChatStickerSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, unique=True)),
                ("title", models.CharField(max_length=64)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("static", "Static"),
                            ("animated", "Animated"),
                            ("video", "Video"),
                        ],
                        default="static",
                        max_length=20,
                    ),
                ),
                (
                    "thumb",
                    models.ImageField(
                        blank=True, null=True, upload_to="sticker_thumbs/"
                    ),
                ),
                ("is_official", models.BooleanField(default=False)),
                ("is_masks", models.BooleanField(default=False)),
                ("is_premium", models.BooleanField(default=False)),
                ("install_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_sticker_sets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sticker Set",
                "verbose_name_plural": "Sticker Sets",
            },
        ),
        migrations.CreateModel(
            name="ChatSticker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="stickers/")),
                (
                    "thumb",
                    models.ImageField(
                        blank=True, null=True, upload_to="sticker_thumbs/"
                    ),
                ),
                ("emoji", models.CharField(blank=True, max_length=20)),
                ("width", models.PositiveIntegerField()),
                ("height", models.PositiveIntegerField()),
                ("file_size", models.PositiveIntegerField()),
                ("mask_position", models.JSONField(blank=True, default=dict)),
                ("is_premium", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField()),
                (
                    "sticker_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stickers",
                        to="chats.chatstickerset",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sticker",
                "verbose_name_plural": "Stickers",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ChatWebhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField(max_length=512)),
                ("events", models.JSONField(default=list)),
                ("secret", models.CharField(blank=True, max_length=256)),
                ("is_active", models.BooleanField(default=True)),
                ("last_delivery", models.DateTimeField(blank=True, null=True)),
                ("delivery_count", models.PositiveIntegerField(default=0)),
                ("error_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhooks",
                        to="chats.chat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Webhook",
                "verbose_name_plural": "Chat Webhooks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserStickerSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                ("installed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sticker_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chats.chatstickerset",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="installed_sticker_sets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Sticker Set",
                "verbose_name_plural": "User Sticker Sets",
                "ordering": ["order"],
            },
        ),
        migrations.AddIndex(
            model_name="chatcall",
            index=models.Index(
                fields=["chat", "start_time"], name="chats_chatc_chat_id_75d741_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatcall",
            index=models.Index(
                fields=["status", "type"], name="chats_chatc_status_b02ce5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chatfolder",
            unique_together={("user", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="chatjoinrequest",
            unique_together={("chat", "user")},
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["chat", "created_at"], name="chats_chatm_chat_id_454977_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["sender", "created_at"], name="chats_chatm_sender__2a3c03_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["type", "has_media"], name="chats_chatm_type_750dd2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["is_scheduled", "scheduled_date"],
                name="chats_chatm_is_sche_143dd4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["media_group_id"], name="chats_chatm_media_g_e38a7f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["message_thread_id"], name="chats_chatm_message_e98655_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(fields=["status"], name="chats_chatm_status_98b4b0_idx"),
        ),
        migrations.AddIndex(
            model_name="chatattachment",
            index=models.Index(
                fields=["message", "type"], name="chats_chata_message_c40bd6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatattachment",
            index=models.Index(
                fields=["file_size"], name="chats_chata_file_si_20696c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmoderationlog",
            index=models.Index(
                fields=["chat", "created_at"], name="chats_chatm_chat_id_74d4d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmoderationlog",
            index=models.Index(
                fields=["moderator", "action"], name="chats_chatm_moderat_5ce0c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmoderationlog",
            index=models.Index(
                fields=["target_user"], name="chats_chatm_target__1a776a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatparticipant",
            index=models.Index(
                fields=["user", "chat"], name="chats_chatp_user_id_66653a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatparticipant",
            index=models.Index(
                fields=["chat", "role"], name="chats_chatp_chat_id_7661f5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatparticipant",
            index=models.Index(
                fields=["status", "joined_at"], name="chats_chatp_status_ceb9d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatparticipant",
            index=models.Index(
                fields=["last_read_at"], name="chats_chatp_last_re_adf825_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chatparticipant",
            unique_together={("user", "chat")},
        ),
        migrations.AddIndex(
            model_name="chat",
            index=models.Index(
                fields=["type", "status"], name="chats_chat_type_9d8c28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chat",
            index=models.Index(
                fields=["creator", "created_at"], name="chats_chat_creator_aacef2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chat",
            index=models.Index(
                fields=["is_public", "type"], name="chats_chat_is_publ_575413_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chat",
            index=models.Index(
                fields=["username"], name="chats_chat_usernam_44fdbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chat",
            index=models.Index(
                fields=["updated_at"], name="chats_chat_updated_b952c1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chatpollanswer",
            unique_together={("poll", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="chatpolloption",
            unique_together={("poll", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="chatsticker",
            unique_together={("sticker_set", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="userstickerset",
            unique_together={("user", "sticker_set")},
        ),
    ]
